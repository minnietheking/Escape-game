

// 스테이지 오브젝트를 생성한다.
// 처음 게임을 실행할때 랜덤으로 생성된다. 죽었다 다시 실행한 경우에는 이전 그대로이다.
// 만약 F5를 눌러서 새로고침할경우 스테이지 구성이 새로 바뀐다.

function set_stage(){

  var r; // 랜덤 변수

  // 객체를 300개를 배치한다. 객체의 길이는 전체 스테이지의 길이가 된다.
  for( var i=0; i<300; i++){

    r = ~~(Math.random()*20); // 랜덤값을 20으로 주어 이 값에 따라 화면에 객체를 랜덤으로 배치 한다.


    if( i < 15 ){
      // 캐릭터가 처음 등장했을때 앞부분 15개는 아무것도 없이 맨땅만 있는 첫 공간이 된다.
      // i*200 은 땅의 가로길이가 200이기 때문이며 이 간격은 모든 객체들의 기본간격이 된다.
      obj_add( 1 ,  i*200 , 740  )
    }
    else if( r == 0 || r == 1 || r == 2){  // 작은 낭떠러지

      /*
      작은 낭떠러지가 생기면 기본적으로 그 뒤 2칸은 기본 땅이 되도록 한다.
      이렇게 설정하지 않으면 랜덤으로 생성되다가 플레이어가 넘어갈수없는 불합리한 맵배치가 생겨날 수 있기 때문이다.
      예를 들어 "낭떠러지+낭떠러지+낭떠러지+책장애물2칸" 과 같은것은 넘어갈 수 없다.
      그러므로 랜덤으로 생성되는 모든 객체는 그 객체의 앞뒤구조가 함께 생성되도록 되어 있다.
      */

      obj_add( 0 ,  i*200 , 350  ) // 별과 낭떠러지( 땅이 없고 별만 있음 )
      i+=1;
      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 450  )  //별과 땅
      i+=1;
      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 550  ) // 별과 땅
    }
    else if( r == 3 || r == 4 || r == 5){  // 책

      // 책 1개가 생성될때에는 그 앞칸과 뒷칸은 기본 땅이 되도록 한다.

      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 450  ); // 별과 땅
      i+=1;
      obj_add( 1 ,  i*200 , 740  ) // 땅
      obj_add( 2 ,  i*200 , 550  ) // 책 장애물
      obj_add( 0 ,  i*200 , 350  ) // 별
      i+=1;
      obj_add( 1 , i*200 , 740  ); obj_add( 0 ,  i*200 , 450  ) // 별과 땅

    }
    else if( r == 6 ){  // 책 2개

      // 책 2개가 생성될때에는 그 앞 2칸과 그 뒤 2칸이 기본 땅이 되도록 하는데
      // 점프 하면서 먹을수 있도록 별의 높이를 조절 해야 한다.

      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 450  );  // 별과 땅
      i+=1;
      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 350  );  // 높은 별과 땅
      i+=1;
      obj_add( 1 ,  i*200 , 740  ) // 땅
      obj_add( 2 ,  i*200 , 550  ) // 책 밑에것
      obj_add( 2 ,  i*200 , 350  ) // 책 위에것
      obj_add( 0 ,  i*200 , 150  ) // 제일 높은 별
      i+=1;
      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 350  ); // 높은 별과 땅
      i+=1;
      obj_add( 1 , i*200 , 740  ); obj_add( 0 ,  i*200 , 450  ); // 별과 땅

    }
    else if( r == 7 ){  // 큰 낭떠러지

      // 범위가 넓은 낭떠러지가 생성될때에는 그 뒤쪽은 기본땅 2개가 오도록 한다.

      obj_add( 0 ,  i*200 , 250  )   // 별과 낭떠러지( 땅이 없고 별만 있음 )
      i+=1;
      obj_add( 0 ,  i*200 , 350  )  // 높은별과 낭떠러지( 땅이 없고 별만 있음 )
      i+=1;
      obj_add( 0 ,  i*200 , 250  )  // 별과 낭떠러지( 땅이 없고 별만 있음 )
      i+=1;
      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 350  ) // 땅과 별
      i+=1;
      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 500  ) // 땅과 별
    }
    else if( r == 8 ){  // 불꽃

      if( i < 50 ){ i-=1; continue; }  // 너무 스테이지 전반부에는 불꽃이 나오지 않도록 한다. 랜덤값을 다시 1 줄여주고 반복문을 다시 돌린다.
      obj_add( 4 ,  i*200 , 180  )  // 중간 높이의 불꽃
      obj_add( 1 , i*200 , 740  ); // 땅
    }
    else if( r == 9 ){  // 불꽃
      if( i < 50 ){ i-=1; continue; }   // 너무 스테이지 전반부에는 불꽃이 나오지 않도록 한다. 랜덤값을 다시 1 줄여주고 반복문을 다시 돌린다.
      obj_add( 4 ,  i*200 , 50  )  // 높은 높이의 불꽃
      obj_add( 1 , i*200 , 740  ); // 땅
    }
    else if( r == 10 ){  // 물약
      if( i < 50 ){ i-=1; continue; }  // 너무 스테이지 전반부에는 물약이 나오지 않도록 한다. 랜덤값을 다시 1 줄여주고 반복문을 다시 돌린다.
      obj_add( 5 , i*200 , 200  )  // 물약 배치
      obj_add( 1 , i*200 , 740  ); // 땅
    }
    else if( r == 11 ){  // 불꽃
      if( i < 50 ){ i-=1; continue; }  // 너무 스테이지 전반부에는 불꽃이 나오지 않도록 한다. 랜덤값을 다시 1 줄여주고 반복문을 다시 돌린다.
      obj_add( 4 , i*200 , 400  ) // 낮은 높이의 불꽃
      obj_add( 1 , i*200 , 740  ); // 땅
    }
    else{

      // 그냥 땅만 표시하는것으로 전체 스테이지의 절반정도가 이것으로 구성된다.
      // 땅이 배치될때에는 그 위에 별도 같이 배치된다.

      obj_add( 1 , i*200 , 740  );  obj_add( 0 , i*200 , 550  )
    }

  }


  // 엔딩(골인) 지점을 배치한다.

  var j=i+50;  // 객체의 가로 위치는 위쪽에서 300개의 땅이 배치된 다음이어야 하므로 i*200 이어지도록 한다.

  for(  ; i<j; i++){

    // i 는 위쪽에서 이어지고 50증가된 j 값만큼 추가로 땅을 배치 한다. 이 영역은 엔딩 지점이 된다.
    obj_add( 1 , i*200 , 740  ); // 땅 배치

    if( i == j-40){
        obj_add( 3 , i*200 , 480  ); // 엔딩 장면에 나오는 마법볼을 배치한다.
    }
  }

}
